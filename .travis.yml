language: python
python:
  - "2.7_with_system_site_packages"
  - 2.6

env:
  matrix:
    - PANDAS_VERSION=0.12.0 TABLES_VERSION=2.3.1 NUMEXPR_VERSION=1.4.1 CYTHON_VERSION=0.13.0 COVERAGE=OFF
    - PANDAS_VERSION=0.12.0 TABLES_VERSION=3.1.1 NUMEXPR_VERSION=2.4 CYTHON_VERSION=0.20.1 COVERAGE=OFF

matrix:
  include:
    - python: "2.7_with_system_site_packages"
      env: PANDAS_VERSION=0.12.0 TABLES_VERSION=3.1.1 NUMEXPR_VERSION=2.2.2 CYTHON_VERSION=0.19.1 COVERAGE=ON

# Install dependencies for PyTables
# command to install dependencies
before_install:
  - echo "+++++++++++ Installing BLAS and FORTRAN compiler +++++++++++"
  - sudo apt-get install gfortran libopenblas-dev liblapack-dev
  - echo "+++++++++++ Installing HDF5 +++++++++++++"
  - sudo apt-get install libhdf5-serial-dev
  - echo "+++++++++++ Installing SciPy and NumPy +++++++++++++"
  - sudo apt-get install -qq python-numpy python-scipy
install:
  - echo "+++++++++++ Installing Coveralls +++++++++++"
  - pip install coveralls
  - echo "Python $TRAVIS_PYTHON_VERSION"
  - echo "+++++++++++  Installing Ordered Dict if Python 2.6 +++++++++++++"
  - if [[ $TRAVIS_PYTHON_VERSION == 2.6* ]]; then pip install ordereddict; fi
  - echo "+++++++++++ Installing NumExpr $NUMEXPR_VERSION +++++++++++++"
  - pip install numexpr==$NUMEXPR_VERSION
  - echo "+++++++++++ Installing Cython $CYTHON_VERSION +++++++++++++"
  - pip install cython==$CYTHON_VERSION
  - echo "+++++++++++ Installing PyTables $TABLES_VERSION +++++++++++++"
  - pip install tables==$TABLES_VERSION
  - echo "+++++++++++ Installing pandas $PANDAS_VERSION +++++++++++++"
  - pip install pandas==$PANDAS_VERSION
  - echo "+++++++++++ Installing Brian +++++++++++"
  - pip install brian
  - echo "+++++++++++ Installing GitPython +++++++++++"
  - pip install GitPython
  #Temporal solution to travis issue #155
  - echo "+++++++++++ Dealing with Issue 155 +++++++++++"
  - sudo rm -rf /dev/shm && sudo ln -s /run/shm /dev/shm
#  - echo "+++++++++++ Installing dill ++++++++++++"
#  - pip install --pre dill
  - echo "+++++++++++ Installing PYPET +++++++++++"
  - pip install .
  - echo "+++++++++++ FINISHED INSTALL +++++++++++"
# Script command for all tests
script: if [[ $COVERAGE == ON ]]; then coverage run --parallel-mode --timid --source=pypet --omit=pypet/brian/*,pypet/tests/* -m pypet.tests.all_single_core_tests; coverage combine; else python ./pypet/tests/all_tests.py; fi
after_success: if [[ $COVERAGE == ON ]]; then coveralls --verbose; fi
branches:
  only:
    - develop
    - master

